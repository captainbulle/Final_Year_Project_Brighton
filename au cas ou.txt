
window.onload = function(){

  var canvas = document.getElementById('canvas');
  if(!canvas){
    alert("canvas unknow");
    return;
  }

  var ctx = canvas.getContext('2d');
  if(!ctx){
    alert("Problem with canvas, impossible to get context");
    return;
  }

  var toolbox = document.getElementById('toolbox');
  if(!toolbox){
    alert("toolbox unknow");
    return;
  }

  var ctx2 = toolbox.getContext('2d');
  if(!ctx2){
    alert("Problem with the toolbox, impossible to get context");
    return;
  }

  canvas.width = 1100;
  canvas.height = 1431;
  toolbox.width = 100;
  toolbox.height = 450;
  ctx.font = "16px Helvetica"; // height max of the letters: 15
  ctx2.font = "11px Helvetica";

  var form;
  var result = false;
  var nbActor = 0;
  var nbUse = 0;
  var nbLine = 0;
  var actors = new Array();
  var uses = new Array();
  var pkgs = new Array();
  var lines = new Array();

  var actor = new stickman(); // 1
  var use = new ellipse();    // 2
  var pkg = new package();    // 3
  //var simpleLine = new line();
  actor.draw(ctx2);
  use.draw(ctx2);
  pkg.draw(ctx2);
  form = pkg.getheight()+160;
  ctx2.fillText("Simple line", 10, form);
  form += 40;
  ctx2.fillText("<< include >>", 10, form);
  form += 40;
  ctx2.fillText("<< extends >>", 10, form);

  ctx2.beginPath();
  ctx2.moveTo(0, 70);
  ctx2.lineTo(toolbox.width, 70);
  ctx2.moveTo(0, 110);
  ctx2.lineTo(toolbox.width, 110);
  form = pkg.getheight()+130;
  ctx2.moveTo(0, form);
  ctx2.lineTo(toolbox.width, form);
  ctx2.stroke();
  ctx2.closePath();

  actor.enlarge();
  use.enlarge();
  pkg.enlarge();
  //ctx.fillRect(0, 0, canvas.height, canvas.width);

  document.getElementById('clear').onclick = function(){
    location.reload();
  }

  document.getElementById('save').onclick = function(){
    window.open(document.getElementById('canvas').toDataURL(), 'My Use Case Diagram', 'scrollbars=yes, width=1200, height=1450');
  }

  function clearCanvas(){
    ctx.clearRect(0, 0, canvas.width, canvas.height);
    var i;
    ///*
    var lg = actors.length;
    var nb = 0;
    for(i = 0; i < lg; i += 4){
      if(i%4 == 0) nb++;
      if($('#actors'+ nb).is('.visible')){
        actor.draw(ctx,actors[i],actors[i+1],actors[i+2]);
      }
    }
    lg = uses.length;
    nb = 0;
    for(i = 0; i < lg; i += 4){
      if(i%4 == 0) nb++;
      if($('#uses'+ nb).is('.visible')){
        use.draw(ctx,uses[i],uses[i+1],uses[i+2]);
      }
    }//*/
    /*
    for(i = $("#nbActor").val(); i > 0; --i){
      actor.draw(ctx,$('#coordX_actor'+ i).val(), $('#coordY_actor'+ i).val(), $('#name_actor'+ i).val());
    }
    for(i = $("#nbUse").val(); i > 0; --i){
      use.draw(ctx,$('#coordX_use'+ i).val(), $('#coordY_use'+ i).val(), $('#name_use'+ i).val());
    }//*/
    //lg = pkgs.length;
    //for(i = 0; i < lg; i += 5) pkg.draw(ctx,pkgs[i],pkgs[i+1],pkgs[i+2]);
    for(i = $("#nbLines").val(); i > 0; --i){
      ctx.beginPath();
      ctx.moveTo($('#startX_line'+ i).val(), $('#startY_line'+ i).val());
      ctx.lineTo($('#endX_line'+ i).val(), $('#endY_line'+ i).val());
      ctx.stroke();
      ctx.closePath();
    }
  }

  form = -1;
  var interval = setInterval(animate, 30);

  function animate(){
    clearCanvas();
    // Getting position of the scrollbar
    scrollTop = document.body.scrollTop;
    if(scrollTop == 0){
      if(window.pageYOffset) // firefox
        scrollTop = window.pageYOffset;
      else // IE
        scrollTop = (document.body.parentElement) ? document.body.parentElement.scrollTop : 0;
    }

    toolbox.onclick = function(e){
      var coord = getCoords(this,e);
      if(coord.y >= 0 && coord.y <= 70){
        actor.setPassed(false);
        form = 1;
      }else if(coord.y >= 70 && coord.y <= 110){
        use.setPassed(false);
        form = 2;
      }else if(coord.y >= 110 && coord.y <= (pkg.getheight()+95)){
        if(nbUse > 0){
          var list = '<option value="none">Select the use case</option>';
          for(var i = 1; i <= nbUse; ++i){
            list += '<option value="'+ i +'" id="use1_'+ i +'">'+ $('#name_use'+ i).val() +'</option>';
          }
          document.getElementById('use1').innerHTML = list;
          $("#dialog-pkg").dialog("open");
          pkg.setPassed(false);
          form = 3;
        }else
          alert('You must have at least one use case for create a package');
      }else if(coord.y >= (pkg.getheight()+95) && coord.y <= (pkg.getheight()+145)){
        if(nbUse >= 1 && nbActor >= 1){
          var list = '<option value="none">Select the actor</option>';
          for(var i = 1; i <= nbActor; ++i){
            list += '<option value="'+ i +'">'+ $('#name_actor'+ i).val() +'</option>';
          }
          document.getElementById('startform').innerHTML = list;
          list = '<option value="none">Select the use case</option>';
          for(var i = 1; i <= nbUse; ++i){
            list += '<option value="'+ i +'">'+ $('#name_use'+ i).val() +'</option>';
          }
          document.getElementById('endform').innerHTML = list;
          nbLine++;
          $("#nbLines").val(nbLine);
          $("#dialog-line").dialog("open");
          //lines.push(result.startX,result.startY,result.endX,result.endY);
        }else
          alert('For create a simple line, you must have at least one actor and one use case');
      }else
        form = -1;
    };

    // We place the form where the user click
    if(form == 1){
      canvas.onclick = function(e){
        var coord = getCoords(this,e);
        //alert("Clic -> X: "+coord.x+" - Y: "+y);
        if(actor.getPassed()){
          var lg = actors.length;
          for(var i = 3; i < lg; i += 4){
            if(actors[i]){
              $('#actors'+ nbActor).removeClass('hidden').addClass('visible');
              actors[i-3] = actor.movingX(coord.x,canvas.width,actors[i-1]);
              actors[i-2] = actor.movingY(coord.y,canvas.height,scrollTop);
              actor.draw(ctx,actors[i-3],actors[i-2],actors[i-1]);
              actors[i] = false;
              //actors[i-2] -= scrollTop;
              break;
            }
          }
        }else{
          var coordX = actor.movingX(coord.x,canvas.width);
          var coordY = actor.movingY(coord.y,canvas.height,scrollTop);
          actor.draw(ctx);
          actor.setPassed(true);
          actors.push(coordX, coordY, "Actor Name", false);
          nbActor++;
          $('#nbActor').val(nbActor);
          $('#actors'+ nbActor).addClass('visible');
          document.getElementById('actors'+ nbActor).innerHTML = '<input type="text" id="coordX_actor'+ nbActor +'" value="'+ coordX +'"/><input type="text" id="coordY_actor'+ nbActor +'" value="'+ coordY +'"/><input type="text" id="name_actor'+ nbActor +'" value="Actor Name"/><input type="text" id="actif_actor'+ nbActor +'" value="0"/><div id="actors'+ (nbActor+1) +'"></div>';
        }
        form = -1;
      };
      canvas.ondblclick = function(e){
        var coord = getCoords(this,e);
        var i = actor.isinside(coord.x, coord.y, actors);
        if(i >= 0){
          //clearInterval(interval);
          //result = $("#dialog-form").dialog("open");
          //$("#dialog-form").dialog("close");
          //interval = setInterval(animate, 30);
          result = prompt("New Name",actors[i+2]);
          if(result){
            actor.del(ctx,actors[i],actors[i+1],actors[i+2]);
            actors[i+2] = result;
            actor.draw(ctx,actors[i],actors[i+1],actors[i+2]);
            for(var j = 1; j <= nbActor; ++j){
              if($('#coordX_actor'+ j).val() == actors[i] && $('#coordY_actor'+ j).val() == actors[i+1]){
                $('#name_actor'+ j).val(result);
                break;
              }
            }
          }
        }
      };
    }else if(form == 2){
      canvas.ondblclick = function(e){
        var coord = getCoords(this,e);
        var i = use.isinside(coord.x, coord.y, uses);
        if(i >= 0){
          result = prompt("New description of the use case",uses[i+2]);
          if(result){
            use.draw(ctx,uses[i],uses[i+1],uses[i+2],true);
            uses[i+2] = result;
            use.draw(ctx,uses[i],uses[i+1],uses[i+2]);
            for(var j = 1; j <= nbUse; ++j){
              if($('#coordX_use'+ j).val() == uses[i] && $('#coordY_use'+ j).val() == uses[i+1]){
                $('#name_use'+ j).val(result);
                break;
              }
            }
          }
        }
        form = -1;
      };
      canvas.onclick = function(e){
        var coord = getCoords(this,e);
        if(use.getPassed()){
          var lg = uses.length;
          for(var i = 3; i < lg; i += 4){
            if(uses[i]){
              // filling the HTML inputs
              $('#uses'+ nbUse).removeClass('hidden').addClass('visible');
              for(var j = 1; j <= nbUse; ++j){
                if($('#coordX_use'+ j).val() == uses[i-3] && $('#coordY_use'+ j).val() == uses[i-2]){
                  $('#coordX_use'+ j).val(coord.x);
                  $('#coordY_use'+ j).val(coord.y);
                }
              }
              // filling the use case Array
              uses[i-3] = use.movingX(coord.x,canvas.width,uses[i-1]);
              uses[i-2] = use.movingY(coord.y,canvas.height,scrollTop);
              use.draw(ctx,uses[i-3],uses[i-2],uses[i-1]);
              uses[i] = false;
              break;
            }
          }
        }else{
          var coordX = use.movingX(coord.x,canvas.width);
          var coordY = use.movingY(coord.y,canvas.height,scrollTop);
          use.draw(ctx);
          use.setPassed(true);
          uses.push(coordX, coordY, "Use Case", false);
          nbUse++;
          $('#nbUse').val(nbUse);
          $('#uses'+ nbUse).addClass('visible');
          document.getElementById('uses'+ nbUse).innerHTML = '<input type="text" id="coordX_use'+ nbUse +'" value="'+ coordX +'"/><input type="text" id="coordY_use'+ nbUse +'" value="'+ coordY +'"/><input type="text" id="name_use'+ nbUse +'" value="Use Case"/><input type="text" id="actif_use'+ nbUse +'" value="0"/><input type="text" id="num_use'+ nbUse +'" value="'+ nbUse +'"/><div id="uses'+ (nbUse+1) +'"></div>';
        }
        form = -1;
      };
    }/*else if(form == 3){
      canvas.onclick = function(e){
        var coord = getCoords(this,e);
        if(pkg.getPassed()){
          var lg = pkgs.length;
          var i;
          for(i = 3; i < lg; i += 5){
            if(pkgs[i]){
              pkg.del(ctx,pkgs[i-3],pkgs[i-2],pkgs[i-1],pkgs[i+1]);
              pkgs[i-3] = pkg.movingX(coord.x,canvas.width);
              pkgs[i-2] = pkg.movingY(coord.y,canvas.height,scrollTop,pkgs[i+1]);
              pkg.draw(ctx,pkgs[i-3],pkgs[i-2],pkgs[i-1],pkgs[i+1]);
              pkgs[i] = false;
              //pkgs[i-2] -= scrollTop;
              break;
            }
          }
        }else{
          var coordX = pkg.movingX(coord.x,canvas.width);
          var coordY = pkg.movingY(coord.y,canvas.height,scrollTop);
          pkg.draw(ctx);
          pkg.setPassed(true);
          pkgs.push(coordX, coordY, "Package", false, 70); // the last is the height of the box
        }
        form = -1;
      };
      canvas.ondblclick = function(e){
        var coord = getCoords(this,e);
        var i = pkg.isinside(coord.x, coord.y, pkgs);
        if(i >= 0){
          result = prompt("New title for the package",pkgs[i+2]);
          if(result){
            pkg.del(ctx,pkgs[i],pkgs[i+1],pkgs[i+2],pkgs[i+4]);
            pkgs[i+2] = result;
            pkg.draw(ctx,pkgs[i],pkgs[i+1],pkgs[i+2],pkgs[i+4]);
          }
        }
      };
    }*/else{
      canvas.onclick = function(e){
        var coord = getCoords(this,e);
        var i = actor.isinside(coord.x, coord.y, actors);
        if(i >= 0){
          //actor.del(ctx,actors[i],actors[i+1],actors[i+2]);
          /*var lenght = actor.getEndX(actors[i+2]);
          var startY = actor.getStartY();
          var endY = actor.getEndY();
          var j = use.isinside(actors[i]-lenght, actors[i+1]-startY, uses); // top-left
          if(j >= 0){
            use.draw(ctx,uses[j],uses[j+1],uses[j+2],true);
            use.draw(ctx,uses[j],uses[j+1],uses[j+2]);
          }else{
            j = use.isinside(actors[i]-lenght, actors[i+1]+endY, uses); // bottom-left
            if(j >= 0){
              use.draw(ctx,uses[j],uses[j+1],uses[j+2],true);
              use.draw(ctx,uses[j],uses[j+1],uses[j+2]);
            }else{
              j = use.isinside(actors[i]+lenght, actors[i+1]-startY, uses); // top-right
              if(j >= 0){
                use.draw(ctx,uses[j],uses[j+1],uses[j+2],true);
                use.draw(ctx,uses[j],uses[j+1],uses[j+2]);
              }else{
                j = use.isinside(actors[i]+lenght, actors[i+1]+endY, uses); // bottom-right
                if(j >= 0){
                  use.draw(ctx,uses[j],uses[j+1],uses[j+2],true);
                  use.draw(ctx,uses[j],uses[j+1],uses[j+2]);
                }
              }
            }
          }*/
          actors[i+3] = true;
          $('#actors'+ nbActor).removeClass('visible').addClass('hidden');
          form = 1;
        }else{
          i = use.isinside(coord.x, coord.y, uses);
          if(i >= 0){
            //use.draw(ctx,uses[i],uses[i+1],uses[i+2],true); // for delete the previous use case
            /*var lenght = use.getLenght(uses[i+2]);
            var height = use.getHeight();
            var j = actor.isinside(uses[i], uses[i+1]-height, actors);
            if(j >= 0){
              actor.del(ctx,actors[j],actors[j+1],actors[j+2]);
              actor.draw(ctx,actors[j],actors[j+1],actors[j+2]);
            }else{
              j = actor.isinside(uses[i], uses[i+1]+height, actors);
              if(j >= 0){
                actor.del(ctx,actors[j],actors[j+1],actors[j+2]);
                actor.draw(ctx,actors[j],actors[j+1],actors[j+2]);
              }else{
                j = actor.isinside(uses[i]+lenght, uses[i+1]-height, actors);
                if(j >= 0){
                  actor.del(ctx,actors[j],actors[j+1],actors[j+2]);
                  actor.draw(ctx,actors[j],actors[j+1],actors[j+2]);
                }else{
                  j = actor.isinside(uses[i]+lenght, uses[i+1]+height, actors);
                  if(j >= 0){
                    actor.del(ctx,actors[j],actors[j+1],actors[j+2]);
                    actor.draw(ctx,actors[j],actors[j+1],actors[j+2]);
                  }
                }
              }
            }*/
            uses[i+3] = true;
            $('#uses'+ nbUse).removeClass('visible').addClass('hidden');
            form = 2;
          }/*else{
            i = pkg.isinside(coord.x, coord.y, pkgs);
            if(i >= 0){
              pkgs[i+3] = true;
              form = 3;
            }
          }*/
        }
      };
    }
  }
}

stickman.prototype.del = function(ctx,coordX,coordY,name){
  // erase stickman
  ctx.clearRect(coordX-this.xDist, coordY-this.head-1, this.xDist*2, this.hisSize);
  // erase the name of the stickman
  var lgName = (name.length/2)*8;
  ctx.clearRect(coordX-lgName, coordY+this.hisSize-this.head, (lgName*2)+10, 22);
}

ellipse.prototype.draw = function(ctx,coordX,coordY,name,erase){
  var h = this.h;
  var w;

  if(name){
    w = ((name.length)*18);
    hText = 25;
    //if(this.useName.length > 10) ....
  }else{
    name = "Use Case";
    coordX = this.coordX;
    coordY = this.coordY;
    w = this.w;
    hText = this.hText;
  }

  if(erase){
    ctx.fillStyle = '#fff';
    w +=  4;
    h += 4;
    coordX -= 2;
    coordY -= 2;
  }

  var kappa = .5522848;
  var ox = (w / 2) * kappa; // control point offset horizontal
  var oy = (h / 2) * kappa; // control point offset vertical
  var xe = coordX + w;      // x-end
  var ye = coordY + h;      // y-end
  var xm = coordX + w / 2;  // x-middle
  var ym = coordY + h / 2;  // y-middle
  
  ctx.beginPath();
  ctx.moveTo(coordX, ym);
  ctx.bezierCurveTo(coordX, ym - oy, xm - ox, coordY, xm, coordY);
  ctx.bezierCurveTo(xm + ox, coordY, xe, ym - oy, xe, ym);
  ctx.bezierCurveTo(xe, ym + oy, xm + ox, ye, xm, ye);
  ctx.bezierCurveTo(xm - ox, ye, coordX, ym + oy, coordX, ym);
  if(erase)
    ctx.fill();
  else
    ctx.stroke();
  ctx.closePath();

  if(erase)
    ctx.fillStyle = '#000';
  else
    ctx.fillText(name, coordX+(w/5), coordY+hText);
}

ellipse.prototype.movingX = function(coordX,width,name){
  if(!name)
    name = "Use Case";
  var w = ((name.length)*18);

  // if the draw exceed the size of the canvas from the left
  if((coordX) < 5)
    this.coordX = 5;
  // if the draw exceed the size of the canvas from the right
  else if((coordX + w+5) > width)
    this.coordX = (width - w-5);
  else
    this.coordX = coordX;
  return this.coordX;
}